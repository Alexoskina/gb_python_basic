# Создать список и заполнить его элементами различных типов данных.
# Реализовать скрипт проверки типа данных каждого элемента.
# Использовать функцию type() для проверки типа.
# Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.

lst = [1, 'string', None, 1.1]


def type_of_elements(elements):
    for elements in range(len(lst)):
        print(type(lst[elements]))
    return


type_of_elements(lst)

# Для списка реализовать обмен значений соседних элементов.
# Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д.
# При нечётном количестве элементов последний сохранить на своём месте.']\\\\\\\\\\
# Для заполнения списка элементов нужно использовать функцию input().

lst = input("Введите элементы списка через запятую: ").split(",")

for i in range(0, len(lst) - 1, 2):
    lst[i], lst[i + 1] = lst[i + 1], lst[i]

print(lst)

# Пользователь вводит месяц в виде целого числа от 1 до 12.
# Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
# Напишите решения через list и через dict.

month = int(input("Введите порядковый номер месяца: "))
if month <= 12 and month >= 1:
    month_dict = {1: 'Январь',
                  2: 'Февраль',
                  3: 'Март',
                  4: 'Апрель',
                  5: 'Май',
                  6: 'Июнь',
                  7: 'Июль',
                  8: 'Август',
                  9: 'Сентябрь',
                  10: 'Октябрь',
                  11: 'Ноябрь',
                  12: 'Декабрь'}
    month_list = list(month_dict.values())
    for num, val in enumerate(month_list):
        if num == month - 1:
            print(f"Месяц в списке - {month_list[num]}")
            break
    print(f"Месяц в словаре - {month_dict[month]}")
else:
    print("Что-то не то:)")

# Пользователь вводит строку из нескольких слов, разделённых пробелами.
# Вывести каждое слово с новой строки.
# Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.


fio = input("Введите ваше ФИО: ").split(" ")
for num, val in enumerate(fio, 1):
    if len(val) > 10:
        val = val[0:10]
    print(f"{num}. {val}")

#Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
#У пользователя необходимо запрашивать новый элемент рейтинга.
#Если в рейтинге существуют элементы с одинаковыми значениями,
#то новый элемент с тем же значением должен разместиться после них.

#Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
#Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
#Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
#Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.

nums = int(input("Введите число: "))
lst = [5,4,3,2,2,1]
elem = lst.count(nums)
for x in lst:
    if elem > 0:
        i = lst.index(nums)
        lst.insert(i+elem, nums)
        break
    else:
        if nums > x:
            y = lst.index(x)
            lst.insert(y, nums)
            break
    elif nums < lst(len(lst)-1):
        lst.append(nums)
print(lst)
